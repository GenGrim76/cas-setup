version: "3.5"

volumes:
  taiga-static-data:
  taiga-async-rabbitmq-data:
  taiga-events-rabbitmq-data:

services:
  taiga-back:
    image: taigaio/taiga-back:latest
    container_name: cas-taiga-back
    restart: unless-stopped
    environment:
      - POSTGRES_DB=taiga
      - POSTGRES_USER=taiga
      - POSTGRES_PASSWORD={{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}
      - POSTGRES_HOST=taiga-db
      - TAIGA_SECRET_KEY={{ lookup('ansible.builtin.password', '.secrets/taiga-secret chars=ascii_letters,digits') }}
      - TAIGA_SITES_SCHEME={{ schema }}
      - TAIGA_SITES_DOMAIN={{ domain }}
      - TAIGA_SUBPATH={{ taiga_path }}
      - RABBITMQ_USER=taiga
      - RABBITMQ_PASS={{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}
      - EVENTS_PUSH_BACKEND_URL=amqp://taiga:{{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}@taiga-events-rabbitmq:5672/taiga
      - CELERY_BROKER_URL=amqp://taiga:{{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}@taiga-async-rabbitmq:5672/taiga
      - ENABLE_TELEMETRY=False
      - ENABLE_GITLAB_AUTH=True
      - GITLAB_API_CLIENT_ID={{ taiga_gitlab_clientid }}
      - GITLAB_API_CLIENT_SECRET={{ taiga_gitlab_clientsecret }}
      - GITLAB_URL={{ schema }}://{{ domain }}{{ gitlab_path }}/
      - PUBLIC_REGISTER_ENABLED=True
{% if schema == 'http' %}
      - SESSION_COOKIE_SECURE=False
      - CSRF_COOKIE_SECURE=False
{% endif %}
    volumes:
      - taiga-static-data:/taiga-back/static
      - {{ taiga_directory }}/media-data:/taiga-back/media
    networks:
      - cas-network
    depends_on:
      - taiga-db
      - taiga-events-rabbitmq
      - taiga-async-rabbitmq

  taiga-db:
    image: postgres:12.3
    container_name: cas-taiga-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=taiga
      - POSTGRES_USER=taiga
      - POSTGRES_PASSWORD={{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}
    volumes:
      - {{ taiga_directory }}/db-data:/var/lib/postgresql/data
    networks:
      - cas-network

  taiga-async:
    image: taigaio/taiga-back:latest
    container_name: cas-taiga-async
    restart: unless-stopped
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]
    environment:
      - POSTGRES_DB=taiga
      - POSTGRES_USER=taiga
      - POSTGRES_PASSWORD={{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}
      - POSTGRES_HOST=taiga-db
      - TAIGA_SECRET_KEY={{ lookup('ansible.builtin.password', '.secrets/taiga-secret chars=ascii_letters,digits') }}
      - TAIGA_SITES_SCHEME={{ schema }}
      - TAIGA_SITES_DOMAIN={{ domain }}
      - TAIGA_SUBPATH={{ taiga_path }}
      - RABBITMQ_USER=taiga
      - RABBITMQ_PASS={{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}
      - ENABLE_TELEMETRY=False
      - ENABLE_GITLAB_AUTH=True
      - GITLAB_API_CLIENT_ID={{ taiga_gitlab_clientid }}
      - GITLAB_API_CLIENT_SECRET={{ taiga_gitlab_clientsecret }}
      - GITLAB_URL={{ schema }}://{{ domain }}{{ gitlab_path }}
      - PUBLIC_REGISTER_ENABLED=True
{% if schema == 'http' %}
      - SESSION_COOKIE_SECURE=False
      - CSRF_COOKIE_SECURE=False
{% endif %}
    volumes:
      - taiga-static-data:/taiga-back/static
      - {{ taiga_directory }}/media-data:/taiga-back/media
    networks:
      - cas-network
    depends_on:
      - taiga-db
      - taiga-back
      - taiga-async-rabbitmq

  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: cas-taiga-async-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_ERLANG_COOKIE={{ lookup('ansible.builtin.password', '.secrets/taiga-secret chars=ascii_letters,digits') }}
      - RABBITMQ_DEFAULT_USER=taiga
      - RABBITMQ_DEFAULT_PASS={{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}
      - RABBITMQ_DEFAULT_VHOST=taiga
    volumes:
      - taiga-async-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - cas-network

  taiga-front:
    image: taigaio/taiga-front:latest
    container_name: cas-taiga-front
    restart: unless-stopped
    environment:
      - TAIGA_URL={{ schema }}://{{ domain }}
      - TAIGA_WEBSOCKETS_URL={{ 'wss' if schema == 'https' else 'ws' }}://{{ domain }}
      - TAIGA_SUBPATH={{ taiga_path }}
      - ENABLE_GITLAB_AUTH=true
      - GITLAB_CLIENT_ID={{ taiga_gitlab_clientid }}
      - GITLAB_URL={{ schema }}://{{ domain }}{{ gitlab_path }}
      - PUBLIC_REGISTER_ENABLED=true
    networks:
      - cas-network

  taiga-events:
    image: taigaio/taiga-events:latest
    container_name: cas-taiga-events
    restart: unless-stopped
    environment:
      - RABBITMQ_USER=taiga
      - RABBITMQ_PASS={{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}
      - TAIGA_SECRET_KEY={{ lookup('ansible.builtin.password', '.secrets/taiga-secret chars=ascii_letters,digits') }}
    networks:
      - cas-network
    depends_on:
      - taiga-events-rabbitmq

  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: cas-taiga-events-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_ERLANG_COOKIE={{ lookup('ansible.builtin.password', '.secrets/taiga-secret chars=ascii_letters,digits') }}
      - RABBITMQ_DEFAULT_USER=taiga
      - RABBITMQ_DEFAULT_PASS={{ lookup('ansible.builtin.password', '.secrets/taiga-password chars=ascii_letters,digits') }}
      - RABBITMQ_DEFAULT_VHOST=taiga
    volumes:
      - taiga-events-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - cas-network

  taiga-protected:
    image: taigaio/taiga-protected:latest
    container_name: cas-taiga-protected
    restart: unless-stopped
    environment:
      - MAX_AGE=360
      - SECRET_KEY={{ lookup('ansible.builtin.password', '.secrets/taiga-secret chars=ascii_letters,digits') }}
    networks:
      - cas-network

  taiga-gateway:
    image: nginx:1.19-alpine
    container_name: cas-taiga-gateway
    hostname: taiga
    restart: unless-stopped
    expose:
      - 80
    volumes:
      - {{ taiga_directory }}/taiga.conf:/etc/nginx/conf.d/default.conf
      - taiga-static-data:/taiga/static
      - {{ taiga_directory }}/media-data:/taiga/media
    networks:
      - cas-network
    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events

networks:
  cas-network:
    external: true
    name: {{ docker_network }}